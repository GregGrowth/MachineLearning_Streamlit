
# Autre code

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Configuration de la page
st.set_page_config(
    page_title="Exploration des donn√©es",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded",
)

st.title("Exploration des donn√©es")

# √âtape 1 : Importer un fichier CSV
uploaded_file = st.file_uploader("T√©l√©chargez votre fichier CSV", type=["csv"])

if uploaded_file is not None:
    # Lire les donn√©es
    data = pd.read_csv(uploaded_file)

    # Affichage d'un aper√ßu des donn√©es
    st.subheader("Aper√ßu des donn√©es")
    st.write(data.head())

    # Afficher les informations g√©n√©rales
    st.subheader("Informations g√©n√©rales")
    st.write(data.info())

    # R√©sum√© statistique
    st.subheader("R√©sum√© statistique")
    st.write(data.describe())

    # Distribution des colonnes num√©riques
    st.subheader("Distribution des variables num√©riques")
    numeric_columns = data.select_dtypes(include=['float64', 'int64']).columns
    selected_column = st.selectbox("S√©lectionnez une colonne pour afficher sa distribution", numeric_columns)

    fig, ax = plt.subplots()
    sns.histplot(data[selected_column], kde=True, ax=ax)
    ax.set_title(f"Distribution de {selected_column}")
    st.pyplot(fig)

    # Matrice de corr√©lation
    st.subheader("Matrice de corr√©lation")
    corr = data.corr()
    fig, ax = plt.subplots(figsize=(10, 8))
    sns.heatmap(corr, annot=True, cmap='coolwarm', ax=ax)
    st.pyplot(fig)

else:
    st.write("Veuillez t√©l√©charger un fichier CSV pour commencer.")

    # G√©n√©rer un rapport Sweetviz
    if st.button("G√©n√©rer un rapport Sweetviz"):
        report = sv.analyze(data)
        report.show_html(filepath='sweetviz_report.html', open_browser=False)
        st.success("Rapport Sweetviz g√©n√©r√© ! Veuillez consulter le fichier sweetviz_report.html")
